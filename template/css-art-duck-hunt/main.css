
/***********************************************************************************************************************\
/***********************************************************************************************************************/

/*********************************************\
      _      _                                 
   __| | ___| |__  _   _  __ _  __ _  ___ _ __ 
  / _` |/ _ \ '_ \| | | |/ _` |/ _` |/ _ \ '__|
 | (_| |  __/ |_) | |_| | (_| | (_| |  __/ |   
  \__,_|\___|_.__/ \__,_|\__, |\__, |\___|_|   
                         |___/ |___/           
/*********************************************/

[debugger] {
	box-shadow: 0px 0px 0px 1px inset red;
}
[debugger-deep] *,
[debugger-deep] {
	box-shadow: 0px 0px 0px 1px inset red;
}
[debugger-adjacent] > *,
[debugger-adjacent] {
	box-shadow: 0px 0px 0px 1px inset red;
}
[debugger-first-child] ~ *,
[debugger-first-child] {
	box-shadow: 0px 0px 0px 1px inset red;
}
/******************************************************************************\
                  _       _     _                    __       _         _      
 __   ____ _ _ __(_) __ _| |__ | | ___  ___    ___  / _|  ___| |_ _   _| | ___ 
 \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|  / _ \| |_  / __| __| | | | |/ _ \
  \ V / (_| | |  | | (_| | |_) | |  __/\__ \ | (_) |  _| \__ \ |_| |_| | |  __/
   \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/  \___/|_|   |___/\__|\__, |_|\___|
                                                                  |___/        
/******************************************************************************/
.css-art__duck-hunt {
	--unit-view: calc(var(--view) / 100);
	--url-grass: url("https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.spriters-resource.com%2Fresources%2Fsheets%2F112%2F114823.png&f=1&nofb=1") ;
	--url-dog-duck: url("https://i.pinimg.com/originals/20/fc/4f/20fc4fe2c41262ed46c246d44f10ccbf.png");
	--url-cursor-sight: url("https://www.cursor.cc/cursor/10/0/cursor.png") 16 16, crosshair;
	--url-dog-duck__size-width: calc(var(--view) * 0.6) ;
	--gradient-ceil: radial-gradient(farthest-corner at 75% 10%, #B9DCF6, #3fbfff);
	--gradient-bullet: linear-gradient(90deg, #654923 20%, #ffd953, #654923, #9A7B34, #96c2b1 95%);
	--color-foreground-blue: #52AEDE;
	--color-alert__border: #7DC106;
}

/***************************************************\
                                   _        _       
   __ _  __ _ _ __ ___   ___   ___| |_ __ _| |_ ___ 
  / _` |/ _` | '_ ` _ \ / _ \ / __| __/ _` | __/ _ \
 | (_| | (_| | | | | | |  __/ \__ \ || (_| | ||  __/
  \__, |\__,_|_| |_| |_|\___| |___/\__\__,_|\__\___|
  |___/                                             
/***************************************************/
.statements {
	
	--STATE--round-one: initial;/*false*/
	--STATE-NOT--round-one: ;/*true*/
	
	--STATE--round-two: initial;/*false*/
	--STATE-NOT--round-two: ;/*true*/
	
	--STATE--round-three: initial;/*false*/
	--STATE-NOT--round-three: ;/*true*/
	
	--STATE--round-three: initial;/*false*/
	--STATE-NOT--round-three: ;/*true*/
	
	
	--STATE--have-bullet-one: ;/*true*/
	--STATE-NOT--have-bullet-one: initial;/*false*/
	
	--STATE--have-bullet-two: ;/*true*/
	--STATE-NOT--have-bullet-two: initial;/*false*/
	
	--STATE--have-bullet-three: ;/*true*/
	--STATE-NOT--have-bullet-three: initial;/*false*/
	
	
	--STATE--all-dead-ducks-round-one: initial;/*false*/
	--STATE-NOT--all-dead-ducks-round-one: ;/*true*/
	
	--STATE--all-dead-ducks-round-two: initial;/*false*/
	--STATE-NOT--all-dead-ducks-round-two: ;/*true*/
	
	--STATE--all-dead-ducks-round-three: initial;/*false*/
	--STATE-NOT--all-dead-ducks-round-three: ;/*true*/
	
	--STATE-ARRAY--ducks__1: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__1: ;/*true*/
	
	--STATE-ARRAY--ducks__2: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__2: ;/*true*/
	
	--STATE-ARRAY--ducks__3: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__3: ;/*true*/
	
	--STATE-ARRAY--ducks__4: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__4: ;/*true*/
	
	--STATE-ARRAY--ducks__5: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__5: ;/*true*/
	
	--STATE-ARRAY--ducks__6: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__6: ;/*true*/
	
	--STATE-ARRAY--ducks__7: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__7: ;/*true*/
	
	--STATE-ARRAY--ducks__8: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__8: ;/*true*/
	
	--STATE-ARRAY--ducks__9: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__9: ;/*true*/
	
	--STATE-ARRAY--ducks__10: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__10: ;/*true*/
	
	--STATE-ARRAY--ducks__11: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__11: ;/*true*/
	
	--STATE-ARRAY--ducks__12: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__12: ;/*true*/
	
	--STATE-ARRAY--ducks__13: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__13: ;/*true*/
	
	--STATE-ARRAY--ducks__14: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__14: ;/*true*/
	
	--STATE-ARRAY--ducks__15: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__15: ;/*true*/
	
	--STATE-ARRAY--ducks__16: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__16: ;/*true*/
	
	--STATE-ARRAY--ducks__17: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__17: ;/*true*/
	
	--STATE-ARRAY--ducks__18: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__18: ;/*true*/
	
	--STATE-ARRAY--ducks__19: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__19: ;/*true*/
	
	--STATE-ARRAY--ducks__20: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__20: ;/*true*/
	
	--STATE-ARRAY--ducks__21: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__21: ;/*true*/
	
	--STATE-ARRAY--ducks__22: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__22: ;/*true*/
	
	--STATE-ARRAY--ducks__23: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__23: ;/*true*/
	
	--STATE-ARRAY--ducks__24: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__24: ;/*true*/
	
	--STATE-ARRAY--ducks__25: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__25: ;/*true*/
	
	--STATE-ARRAY--ducks__26: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__26: ;/*true*/
	
	--STATE-ARRAY--ducks__27: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__27: ;/*true*/
	
	--STATE-ARRAY--ducks__28: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__28: ;/*true*/
	
	--STATE-ARRAY--ducks__29: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__29: ;/*true*/
	
	--STATE-ARRAY--ducks__30: initial;/*false*/
	--STATE-ARRAY-NOT--ducks__30: ;/*true*/
	
	--STATE--you-win: initial;/*false*/
	--STATE-NOT--you-win: ;/*true*/
	
	
}
/************************************************************************\
                  _       _     _                                        
 __   ____ _ _ __(_) __ _| |__ | | ___  ___    __ _  __ _ _ __ ___   ___ 
 \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|  / _` |/ _` | '_ ` _ \ / _ \
  \ V / (_| | |  | | (_| | |_) | |  __/\__ \ | (_| | (_| | | | | | |  __/
   \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/  \__, |\__,_|_| |_| |_|\___|
                                              |___/                      
/************************************************************************/
.css-art__duck-hunt {
	--timing-game__delay: 100ms;

	--sprite-dog--teasing__timing-function:lineal;
	--sprite-dog--jump__steps:steps(3);
	--sprite-dog--walk__steps:steps(5);
	--motion-dog--walk__steps:steps(40);
	--motion-dog--jump__steps:cubic-bezier(1,.78,.01,.71);
	
	--sprite-dog--teasing__duration: 300ms;
	--sprite-dog--jump__duration:800ms;
	--sprite-dog--walk__duration:600ms;
	--motion-dog--walk__duration:6000ms;
	--motion-dog--jump__duration:calc(var(--sprite-dog--jump__duration) * 1);
	
	--sprite-dog--teasing__iteration-count: infinite;
	--sprite-dog--jump__iteration-count:1;
	--sprite-dog--walk__iteration-count:infinite;
	--motion-dog--walk__iteration-count:1;
	--motion-dog--jump__iteration-count:1;
	
	--sprite-dog--get-one-duck__background-position:calc(-0.85 * var(--url-dog-duck__size-width)) 0 !important;
	--sprite-dog--get-two-duck__background-position:calc(-0.85 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1) !important;
	
	--sprite-dog--teasing__animation-delay: 1100ms;
	
	--sprite-duck--falls-off__timing-function:linear;
	--sprite-duck--falls-off__iteration-count:1;
	--sprite-duck--falls-off__direction:alternate;
	--sprite-duck--falls-off__duration:1000ms;
	--sprite-duck--falls-off__fill-mode: forwards;
	
	--sprite-duck--horizontal-fly__timing-function:steps(3);
	--sprite-duck--horizontal-fly__iteration-count:infinite;
	--sprite-duck--horizontal-fly__direction:normal;
	--sprite-duck--horizontal-fly__duration:600ms;
	--sprite-duck--horizontal-fly__fill-mode: initial;
	
	--sprite-duck--vertical-fly__timing-function:steps(3);
	--sprite-duck--vertical-fly__iteration-count:infinite;
	--sprite-duck--vertical-fly__direction:normal;
	--sprite-duck--vertical-fly__duration:600ms;
	--sprite-duck--vertical-fly__fill-mode: initial;
	
	--sprite-duck--diagonal-fly__timing-function:steps(3);
	--sprite-duck--diagonal-fly__iteration-count:infinite;
	--sprite-duck--diagonal-fly__direction:normal;
	--sprite-duck--diagonal-fly__duration:600ms;
	--sprite-duck--diagonal-fly__fill-mode: initial;
	
	--motion-duck--falls-off__timing-function:cubic-bezier(.5,.01,.76,.58);
	--motion-duck--falls-off__iteration-count:1;
	--motion-duck--falls-off__direction:normal;
	--motion-duck--falls-off__duration:1000ms;
	--motion-duck--falls-off__fill-mode:initial;
    
	--sprite-duck--falls-off__timing-function:linear;
	--sprite-duck--falls-off__iteration-count:1;
	--sprite-duck--falls-off__direction:normal;
	--sprite-duck--falls-off__duration:700ms;
	--sprite-duck--falls-off__fill-mode:initial;

	--motion-dog--show__duration:2000ms;


	
	--motion-duck--path__duration: 30000ms;

}
/***************************************************\
   __             _           _         _           
  / _| ___   ___ | |___   ___| |_ _   _| | ___  ___ 
 | |_ / _ \ / _ \| / __| / __| __| | | | |/ _ \/ __|
 |  _| (_) | (_) | \__ \ \__ \ |_| |_| | |  __/\__ \
 |_|  \___/ \___/|_|___/ |___/\__|\__, |_|\___||___/
                                  |___/             
/***************************************************/
.css-art__duck-hunt {
	height: var(--view);
	width: var(--view);
	position:relative;
	overflow:hidden;
	justify-content: center;
	background: var(--gradient-ceil);
	font-family: 'Press Start 2P', sans-serif;
	font-weight: 100;
	font-size: calc(var(--unit-view) * 1.5);
	overflow: hidden;
	cursor: var(--url-cursor-sight);
}
.statements {
	all: inherit;
	display: flex;
	top: 0px;
    position: absolute;
}
.css-art__duck-hunt * {
	cursor: var(--url-cursor-sight);
}
.statements > * {
	z-index: 3;
}
input[type="checkbox"]{
	display: none;
	position: relative;
	/* top:  calc(var(--view) * -1); */
	background-color: #F6CADF;
	z-index: 10;
}
a {
	cursor: pointer;
	color: var(--color-foreground-blue);
	text-decoration: none;
}
label[for*="waste-my-bullet"] {
	height: calc(var(--view) * 0.83);
	width: var(--view);
	position: absolute;
	left: 0px;
	top: 0px;
}
label[for*="round"], .alert {
	position: absolute;
	display: grid;
	height: calc(var(--unit-view) * 20);
	width: calc(var(--unit-view) * 40);
	font-size: calc(var(--unit-view) * 2);
	background-color: black;
	place-self: center;
	place-content: center;
	place-items: center;
	gap: calc(var(--unit-view) * 2);
	border-radius: calc(var(--unit-view) * 1);
	box-shadow: 0px 0px 0px calc(var(--unit-view) * 0.3) inset var(--color-alert__border);
	user-select: none;
}
.grass {
	position: absolute;
	bottom: 0px;
	height: calc(var(--unit-view) * 42);
	width: var(--view);
	background-image: var(--url-grass);
	background-size: auto 225%;
	background-position-y: 10%;
	background-repeat: no-repeat;
	z-index: 2;
}
.shot {
	position: absolute;
	bottom: 1.2%;
	left: 29.5%;
	width: calc(var(--unit-view) * 6);
	height: calc(var(--unit-view) * 3.8);
	color: var(--color-foreground-blue);
}
.shot > p {
	font-size: calc(var(--unit-view) * 1.2);
	position: absolute;
	bottom: calc(var(--unit-view) * -0.3);
	left: calc(var(--unit-view) * 0.3);
	line-height: 0;
	user-select: none;
}
.bullets {
	display: flex;
	flex-direction: row;
	gap: calc(var(--unit-view) * 0.5);
	justify-content: center;
	width: calc(var(--unit-view) * 5.1);
	margin-top: calc(var(--unit-view) * 0.2);
}
.bullets .bullet {
	background: var(--gradient-bullet);
	width: calc(var(--unit-view) * 1);
	height: calc(var(--unit-view) * 1.6);
	clip-path: polygon(70% 0, 30% 0, 0 25%, 0 70%, 100% 70%, 100% 80%, 0 80%, 0 100%, 100% 100%, 100% 25%);
}
.dog {
	background-position:0% 0%;
	background-size: calc(var(--view) * 0.6) auto;
	background-repeat:no-repeat;
	background-image:var(--url-dog-duck);
	--sprite-dog__height: calc(var(--url-dog-duck__size-width) * 0.15);
	--sprite-dog__width: calc(var(--url-dog-duck__size-width) * 0.17);
	height: var(--sprite-dog__height);
	width: var(--sprite-dog__width);
	position:absolute;
	bottom: calc(var(--unit-view) * 6);
	left: calc(var(--sprite-dog__width) * -1);
}
label[for*="shot"] {
	--url-dog-duck__size-width: calc(var(--view) * 0.6) ;
	background-size: calc(var(--view) * 0.6) auto;
	background-repeat:no-repeat;
	background-image:var(--url-dog-duck);
	--sprite-dog__height: calc(var(--url-dog-duck__size-width) * 0.105);
	--sprite-dog__width: calc(var(--url-dog-duck__size-width) * 0.1);
	height: var(--sprite-dog__height);
	width: var(--sprite-dog__width);
	position:absolute;
	bottom: calc(var(--unit-view) * 5);
	right: calc(var(--sprite-dog__width) * 0);
	/* transform: scaleX(-1); */
	position: absolute;
	transform-origin: center center;
	z-index: 2;
}
/* create variable to level */
label[for*="shot"]::after {
	/* content: var(--point, "2"); */
	content: "";
	display: flex;
	border-radius: 50%;
	position: absolute;
	left: calc(var(--sprite-dog__width) * -0.5);
	top: calc(var(--sprite-dog__height) * -0.5);
	height: calc(var(--sprite-dog__height) * 2);
	width: calc(var(--sprite-dog__width) * 2);
}
/* label[for*="shot"]:hover::after {
	background-color: rgba(255, 255, 255, 0.1);
} */
.hit {
	display: flex;
	position: absolute;
	bottom: calc(var(--unit-view) * 3.2);
	left: calc(var(--unit-view) * 42.5);
}
.hit .duck {
	height:calc(var(--unit-view) * 1.7);
	width:calc(var(--unit-view) * 1.7);
	background-color: whitesmoke;
	-webkit-clip-path: polygon(60% 64%, 57% 13%, 37% 14%, 32% 23%, 10% 33%, 36% 33%, 36% 51%, 22% 60%, 15% 81%, 25% 91%, 68% 90%, 85% 82%, 94% 70%, 94% 48%, 74% 47%); 
	clip-path: polygon(60% 64%, 57% 13%, 37% 14%, 32% 23%, 10% 33%, 36% 33%, 36% 51%, 22% 60%, 15% 81%, 25% 91%, 68% 90%, 85% 82%, 94% 70%, 94% 48%, 74% 47%);

}
.block-win, .block {
	all: inherit;
	top: 0px;
	position: absolute;
	z-index: 4;
	background-color: rgba(63, 191, 255, 0.4);
}

/*****************************************************\
              _                 _   _                 
   __ _ _ __ (_)_ __ ___   __ _| |_(_) ___  _ __  ___ 
  / _` | '_ \| | '_ ` _ \ / _` | __| |/ _ \| '_ \/ __|
 | (_| | | | | | | | | | | (_| | |_| | (_) | | | \__ \
  \__,_|_| |_|_|_| |_| |_|\__,_|\__|_|\___/|_| |_|___/
                                                      
/*****************************************************/
label[for*="round"], .alert {
	--motion-alert--throb__timing-function: ease-in-out;
	--motion-alert--throb__duration:800ms;
	--motion-alert--throb__iteration-count: infinite;
	--motion-alert--throb__direction: alternate;
	animation-name: 
		motion-alert--throb
	;
	animation-timing-function: 
		var(--motion-alert--throb__timing-function)
	;
	animation-duration: 
		var(--motion-alert--throb__duration)
	;
	animation-iteration-count: 
		var(--motion-alert--throb__iteration-count)
	;
	animation-direction: 
		var(--motion-alert--throb__direction)
	;
}
@keyframes motion-alert--throb {
	from {
		transform: scale(0.96);
	}
	to {
		transform: scale(1.04);
	}
}
/* label[for*="shot"] { */
	/* animation: sprite-duck--falls-off 1000ms linear 1 forwards ; */
	/* --sprite-duck--horizontal-fly */
	
/* } */

/* --sprite-dog__height */

/***********************\
      _            _    
   __| |_   _  ___| | __
  / _` | | | |/ __| |/ /
 | (_| | |_| | (__|   < 
  \__,_|\__,_|\___|_|\_\
                        
\***********************/

@keyframes motion-duck--path-one {
	0% {
		/* transform: translate(x, y); */
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -5), 
				calc(var(--sprite-dog__height) * -3)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	5% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -15), 
				calc(var(--sprite-dog__height) * -5)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	5.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -15), 
				calc(var(--sprite-dog__height) * -5)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	9.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -7), 
				calc(var(--sprite-dog__height) * -12)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	10% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -7), 
				calc(var(--sprite-dog__height) * -12)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	15% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -16), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	15.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -16), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	16.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -12), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	17% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -12), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	20% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -16), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	20.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -16), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	24.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -2), 
				calc(var(--sprite-dog__height) * -13)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	25% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -2), 
				calc(var(--sprite-dog__height) * -13)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	30% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -6), 
				calc(var(--sprite-dog__height) * -5)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	30.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -6), 
				calc(var(--sprite-dog__height) * -5)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	34.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -2), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	35% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -2), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	37% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -4), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	37.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -4), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	39.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -0), 
				calc(var(--sprite-dog__height) * -9)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	40% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -0), 
				calc(var(--sprite-dog__height) * -9)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	45% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -16), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	45.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -16), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	49.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -3), 
				calc(var(--sprite-dog__height) * -10)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	50% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -3), 
				calc(var(--sprite-dog__height) * -10)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	55% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -12), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	55.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -12), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	59.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -5), 
				calc(var(--sprite-dog__height) * -10)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	60% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -5), 
				calc(var(--sprite-dog__height) * -10)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	65% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -7), 
				calc(var(--sprite-dog__height) * -3)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	65.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -7), 
				calc(var(--sprite-dog__height) * -3)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	69.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -1), 
				calc(var(--sprite-dog__height) * -5)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	70% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -1), 
				calc(var(--sprite-dog__height) * -5)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	75% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -15), 
				calc(var(--sprite-dog__height) * -11)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	75.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -15), 
				calc(var(--sprite-dog__height) * -11)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	79.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -0), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	80% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -0), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	85% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -9), 
				calc(var(--sprite-dog__height) * -3)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	85.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -9), 
				calc(var(--sprite-dog__height) * -3)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	90% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -8), 
				calc(var(--sprite-dog__height) * -10)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	94.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -1), 
				calc(var(--sprite-dog__height) * -5)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	95% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -1), 
				calc(var(--sprite-dog__height) * -5)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	100% {
		/* transform: translate(x, y); */
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -5),
				calc(var(--sprite-dog__height) * -3)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
}

@keyframes motion-duck--path-two {
	0% {
		/* transform: translate(x, y); */
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -5), 
				calc(var(--sprite-dog__height) * -3)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	4.99%{
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -1), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	5% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -1), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	9.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -15), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	10% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -15), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	14.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -4), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	15% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -4), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	17% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -11), 
				calc(var(--sprite-dog__height) * -13)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	17.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -11), 
				calc(var(--sprite-dog__height) * -13)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	19.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -4), 
				calc(var(--sprite-dog__height) * -10)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	20% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -4), 
				calc(var(--sprite-dog__height) * -10)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	25% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -8), 
				calc(var(--sprite-dog__height) * -9)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	25.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -8), 
				calc(var(--sprite-dog__height) * -9)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	29.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -5), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	30% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -5), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	35% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -13), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	35.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -13), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	36.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -4), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	37% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -4), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	40% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -7), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	45% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -10), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	45.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -10), 
				calc(var(--sprite-dog__height) * -7)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	49.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -3), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	50% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -3), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	55% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -14), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	55.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -14), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	59.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -8), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	60% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -8), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	65% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -14), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	70% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -16), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	70.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -16), 
				calc(var(--sprite-dog__height) * -6)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	75% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -14), 
				calc(var(--sprite-dog__height) * -12)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	80% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -7), 
				calc(var(--sprite-dog__height) * -10)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	84.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -2), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	85% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -2), 
				calc(var(--sprite-dog__height) * -14)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	90% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -12), 
				calc(var(--sprite-dog__height) * -12)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	90.01% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -12), 
				calc(var(--sprite-dog__height) * -12)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	94.99% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -1), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(1)
		;
		z-index: 3;
	}
	95% {
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -1), 
				calc(var(--sprite-dog__height) * -8)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
	100% {
		/* transform: translate(x, y); */
		transform: 
			translate(
				calc(var(--sprite-dog__width ) * -5),
				calc(var(--sprite-dog__height) * -3)
			)
			scaleX(-1)
		;
		z-index: 3;
	}
}

@keyframes sprite-duck--falls-off {
	0% {
		background-position: 0 calc((-0.3 * var(--url-dog-duck__size-width)) - (var(--sprite-dog__height) * 3));
	}
	50% {
		background-position: 0 calc((-0.3 * var(--url-dog-duck__size-width)) - (var(--sprite-dog__height) * 3));
	}
	50.001% {
		background-position: calc(-0.11 * var(--url-dog-duck__size-width)) calc((-0.3 * var(--url-dog-duck__size-width)) - (var(--sprite-dog__height) * 3));
	}
	100% {
		background-position: calc(-0.11 * var(--url-dog-duck__size-width)) calc((-0.3 * var(--url-dog-duck__size-width)) - (var(--sprite-dog__height) * 3));
	}
}
@keyframes motion-duck--falls-off {
	from {
		bottom: calc(var(--unit-view) * 5);
		z-index: 1;
	}
	to {
		bottom: calc(var(--view) * -0.75);
		z-index: 1;
	}
}
@keyframes sprite-duck--horizontal-fly {
	from {
		background-position: 0 calc(-0.3 * var(--url-dog-duck__size-width)) ;
	}
	to {
		background-position: calc(-0.32 * var(--url-dog-duck__size-width)) calc(-0.3 * var(--url-dog-duck__size-width));
	}
}
@keyframes sprite-duck--vertical-fly {
	from {
		background-position: 0 calc((-0.3 * var(--url-dog-duck__size-width)) - (var(--sprite-dog__height) * 2));
	}
	to {
		background-position: calc(-0.32 * var(--url-dog-duck__size-width)) calc((-0.3 * var(--url-dog-duck__size-width)) - (var(--sprite-dog__height) * 2));
	}
}
@keyframes sprite-duck--diagonal-fly {
	from {
		background-position: 0  calc((-0.3 * var(--url-dog-duck__size-width)) - var(--sprite-dog__height));
	}
	to {
		background-position: calc(-0.32 * var(--url-dog-duck__size-width)) calc((-0.3 * var(--url-dog-duck__size-width)) - var(--sprite-dog__height));
	}
}
/*******************\
      _             
   __| | ___   __ _ 
  / _` |/ _ \ / _` |
 | (_| | (_) | (_| |
  \__,_|\___/ \__, |
              |___/ 
\*******************/

@keyframes sprite-dog--get-one-duck {
	from {
		background-position: var(--sprite-dog--get-one-duck__background-position);
	}
	to {
		background-position: var(--sprite-dog--get-one-duck__background-position);
	}
}

/* @keyframes sprite-dog--get-two-duck {
	from {
		background-position: var(--sprite-dog--get-two-duck__background-position);
	}
	to {
		background-position: var(--sprite-dog--get-two-duck__background-position);
	}
} */
@keyframes sprite-dog--get-two-duck {
	from {
		background-position: calc(-0.85 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1) !important;
	}
	to {
		background-position: calc(-0.85 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1) !important;
	}
}


@keyframes motion-dog--show-2 {
	0% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * 0));
	}
	15% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * -0.8));
	}
	85% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * -0.8));
	}
	100% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * 0));
	}
}
@keyframes motion-dog--show {
	0% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * 0));
	}
	10% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * -0.8));
	}
	90% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * -0.8));
	}
	100% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * 0));
	}
}
@keyframes sprite-dog--teasing {
	0% {
		background-position: calc(-0.47 * var(--url-dog-duck__size-width) - var(--sprite-dog__width)) calc(var(--sprite-dog__height) * -1);
	}
	50% {
		background-position: calc(-0.47 * var(--url-dog-duck__size-width) - var(--sprite-dog__width)) calc(var(--sprite-dog__height) * -1);
	}
	50.01% {
		background-position: calc(-0.48 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1);
	}
	100% {
		background-position: calc(-0.48 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1);
	}
}

@keyframes motion-dog--jump {
	0% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), 0);
	}
	50% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * -2.4));
	}
	50.01% {
		transform: translate(calc(var(--sprite-dog__width) * 5.5), calc(var(--sprite-dog__height) * -2.4));
		z-index: 1;
	}
	100% {
		z-index: 1;
		transform: translate(calc(var(--sprite-dog__width) * 5.5), 0);
	}
}
@keyframes motion-dog--walk {
	from {
		transform: translateX(0);
	}
	to {
		transform: translateX(calc(var(--sprite-dog__width) * 5.5));
	}
}
@keyframes sprite-dog--walk {
	from {
		background-position: 0% 0%;
	}
	to {
		background-position: calc(-0.8 * var(--url-dog-duck__size-width)) 0%;
	}
}
@keyframes sprite-dog--jump {
	from {
		background-position: 0% calc(var(--sprite-dog__height) * -1);
	}
	to {
		background-position: calc(-0.48 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1);
	}
}


input[id="round-one"]:checked ~ .statements label[for="round-one"] {
	display: none;
}
input[id="round-two"] ~ .statements  label[for="round-two"] {
	display: none;
}
input[id="round-two"] ~ .statements  label[for="round-three"] {
	display: none;
}
/**********************************************************\
       _                                  _        _       
   ___| |__   __ _ _ __   __ _  ___   ___| |_ __ _| |_ ___ 
  / __| '_ \ / _` | '_ \ / _` |/ _ \ / __| __/ _` | __/ _ \
 | (__| | | | (_| | | | | (_| |  __/ \__ \ || (_| | ||  __/
  \___|_| |_|\__,_|_| |_|\__, |\___| |___/\__\__,_|\__\___|
                         |___/                              
/**********************************************************/

.css-art__duck-hunt input[id="round-one"]:checked ~ .statements {
	--STATE--round-one: ;/*true*/
	--STATE-NOT--round-one: initial;/*false*/
	
	--STATE-ARRAY--ducks__1: ;/*true*/
	--STATE-ARRAY-NOT--ducks__1: initial;/*false*/
}
.css-art__duck-hunt input[id="shot01"]:checked ~ .statements {
	--STATE-ARRAY--ducks__2: ;/*true*/
	--STATE-ARRAY-NOT--ducks__2: initial;/*false*/
}
.css-art__duck-hunt input[id="shot02"]:checked ~ .statements {
	--STATE-ARRAY--ducks__3: ;/*true*/
	--STATE-ARRAY-NOT--ducks__3: initial;/*false*/
}
.css-art__duck-hunt input[id="shot03"]:checked ~ .statements {
	--STATE-ARRAY--ducks__4: ;/*true*/
	--STATE-ARRAY-NOT--ducks__4: initial;/*false*/
}
.css-art__duck-hunt input[id="shot04"]:checked ~ .statements {
	--STATE-ARRAY--ducks__5: ;/*true*/
	--STATE-ARRAY-NOT--ducks__5: initial;/*false*/
}
.css-art__duck-hunt input[id="shot05"]:checked ~ .statements {
	--STATE-ARRAY--ducks__6: ;/*true*/
	--STATE-ARRAY-NOT--ducks__6: initial;/*false*/
}
.css-art__duck-hunt input[id="shot06"]:checked ~ .statements {
	--STATE-ARRAY--ducks__7: ;/*true*/
	--STATE-ARRAY-NOT--ducks__7: initial;/*false*/
}
.css-art__duck-hunt input[id="shot07"]:checked ~ .statements {
	--STATE-ARRAY--ducks__8: ;/*true*/
	--STATE-ARRAY-NOT--ducks__8: initial;/*false*/
}
.css-art__duck-hunt input[id="shot08"]:checked ~ .statements {
	--STATE-ARRAY--ducks__9: ;/*true*/
	--STATE-ARRAY-NOT--ducks__9: initial;/*false*/
}
.css-art__duck-hunt input[id="shot09"]:checked ~ .statements {
	--STATE-ARRAY--ducks__10: ;/*true*/
	--STATE-ARRAY-NOT--ducks__10: initial;/*false*/
}
.css-art__duck-hunt input[id="shot10"]:checked ~ .statements {
	--STATE-ARRAY--ducks__11: ;/*true*/
	--STATE-ARRAY-NOT--ducks__11: initial;/*false*/
	--STATE--you-win: ;/*true*/
	--STATE-NOT--you-win: initial;/*false*/
}

.css-art__duck-hunt input[id="waste-my-bullet-one"]:checked ~ .statements {
	--STATE--have-bullet-one: initial;/*false*/
	--STATE-NOT--have-bullet-one: ;/*true*/
}
.css-art__duck-hunt input[id="waste-my-bullet-two"]:checked ~ .statements {
	--STATE--have-bullet-two: initial;/*false*/
	--STATE-NOT--have-bullet-two: ;/*true*/
}
.css-art__duck-hunt input[id="waste-my-bullet-three"]:checked ~ .statements {
	--STATE--have-bullet-three: initial;/*false*/
	--STATE-NOT--have-bullet-three: ;/*true*/
}


/***************************************************\
                               _             _      
   __ _  __ _ _ __ ___   ___  | | ___   __ _(_) ___ 
  / _` |/ _` | '_ ` _ \ / _ \ | |/ _ \ / _` | |/ __|
 | (_| | (_| | | | | | |  __/ | | (_) | (_| | | (__ 
  \__, |\__,_|_| |_| |_|\___| |_|\___/ \__, |_|\___|
  |___/                                |___/         
/***************************************************/

.bullet:nth-last-child(1) {
	--STATE-IF--have-bullet-one: var(--STATE--have-bullet-one) block;
	--STATE-ELSE--have-bullet-one: none;
	--STATE-RETRUN--have-bullet-one: var(--STATE-IF--have-bullet-one, var(--STATE-ELSE--have-bullet-one));
	display: var(--STATE-RETRUN--have-bullet-one);

}
.bullet:nth-last-child(2) {
	--STATE-IF--have-bullet-two: var(--STATE--have-bullet-two) block;
	--STATE-ELSE--have-bullet-two: none;
	--STATE-RETRUN--have-bullet-two: var(--STATE-IF--have-bullet-two, var(--STATE-ELSE--have-bullet-two));
	display: var(--STATE-RETRUN--have-bullet-two);

}
.bullet:nth-last-child(3) {
	--STATE-IF--have-bullet-three: var(--STATE--have-bullet-three) block;
	--STATE-ELSE--have-bullet-three: none;
	--STATE-RETRUN--have-bullet-three: var(--STATE-IF--have-bullet-three, var(--STATE-ELSE--have-bullet-three));
	display: var(--STATE-RETRUN--have-bullet-three);
}

label[for="waste-my-bullet-one"] {
	--STATE-IF--have-bullet-one: var(--STATE--have-bullet-one) block;
	--STATE-ELSE--have-bullet-one: none;
	--STATE-RETRUN--have-bullet-one: var(--STATE-IF--have-bullet-one, var(--STATE-ELSE--have-bullet-one));
	display: var(--STATE-RETRUN--have-bullet-one);
	
}
label[for="waste-my-bullet-two"] {
	--STATE-IF--have-bullet-two: var(--STATE--have-bullet-two) block;
	--STATE-ELSE--have-bullet-two: none;
	--STATE-RETRUN--have-bullet-two: var(--STATE-IF--have-bullet-two, var(--STATE-ELSE--have-bullet-two));
	display: var(--STATE-RETRUN--have-bullet-two);
}
label[for="waste-my-bullet-three"] {
	--STATE-IF--have-bullet-three: var(--STATE--have-bullet-three) block;
	--STATE-ELSE--have-bullet-three: none;
	--STATE-RETRUN--have-bullet-three: var(--STATE-IF--have-bullet-three, var(--STATE-ELSE--have-bullet-three));
	display: var(--STATE-RETRUN--have-bullet-three);
}
.gameover {
	--STATE-IF--have-bullet-one: var(--STATE-NOT--have-bullet-one) flex;
	--STATE-ELSE--have-bullet-one: none;
	--STATE-RETRUN--have-bullet-one: var(--STATE-IF--have-bullet-one, var(--STATE-ELSE--have-bullet-one));
	display: var(--STATE-RETRUN--have-bullet-one);
	z-index: 5;
	flex-direction: column;
}
.block {
	--STATE-IF--have-bullet-one: var(--STATE-NOT--have-bullet-one) flex;
	--STATE-ELSE--have-bullet-one: none;
	--STATE-RETRUN--have-bullet-one: var(--STATE-IF--have-bullet-one, var(--STATE-ELSE--have-bullet-one));
	display: var(--STATE-RETRUN--have-bullet-one);
}
/*
____ _  _ _  _    ___  ____ ____    ____ _  _    ____ ____ _  _ _  _ ___     ____ _  _ ____    
|__/ |  | |\ |    |  \ |  | | __    |  | |\ |    |__/ |  | |  | |\ | |  \    |  | |\ | |___    
|  \ |__| | \|    |__/ |__| |__]    |__| | \|    |  \ |__| |__| | \| |__/    |__| | \| |___    
*/
.css-art__duck-hunt .dog {
	

	--STATE-CONDITIONAL-ducks: var(--STATE-ARRAY--ducks__2, var(--STATE-ARRAY--ducks__3, var(--STATE-ARRAY--ducks__4, var(--STATE-ARRAY--ducks__5, var(--STATE-ARRAY--ducks__6, var(--STATE-ARRAY--ducks__7, var(--STATE-ARRAY--ducks__8, var(--STATE-ARRAY--ducks__9, var(--STATE-ARRAY--ducks__10)))))))));
	--STATE-NOT-CONDITIONAL-ducks: var(--STATE-ARRAY-NOT--ducks__2, var(--STATE-ARRAY-NOT--ducks__3, var(--STATE-ARRAY-NOT--ducks__4, var(--STATE-ARRAY-NOT--ducks__5, var(--STATE-ARRAY-NOT--ducks__6, var(--STATE-ARRAY-NOT--ducks__7, var(--STATE-ARRAY-NOT--ducks__8, var(--STATE-ARRAY-NOT--ducks__9, var(--STATE-ARRAY-NOT--ducks__10)))))))));
	--STATE-IF--ducks__play-state: var(--STATE-CONDITIONAL-ducks) running;
	--STATE-ELSE--ducks__play-state: paused;
	--STATE-RETRUN--ducks__play-state: var(--STATE-IF--ducks__play-state, var(--STATE-ELSE--ducks__play-state));
	
	--STATE-IF--ducks__animation--show: var(--STATE-CONDITIONAL-ducks) motion-dog-show;
	--STATE-ELSE--ducks__animation--show: none;
	--STATE-RETRUN--ducks__animation--show: var(--STATE-IF--ducks__animation--show, var(--STATE-ELSE--ducks__animation--show));


	--STATE-IF--ducks__animation--get-one-duck: var(--STATE-CONDITIONAL-ducks) sprite-dog--get-one-duck;
	--STATE-ELSE--ducks__animation--get-one-duck: none;
	--STATE-RETRUN--ducks__animation--get-one-duck: var(--STATE-IF--ducks__animation--get-one-duck, var(--STATE-ELSE--ducks__animation--get-one-duck));


	--STATE-IF--round-one: var(--STATE--round-one) running;
	--STATE-ELSE--round-one: paused;
	--STATE-RETRUN--round-one: var(--STATE-IF--round-one, var(--STATE-ELSE--round-one));
	--STATE-CONDITIONAL-RETRUN--round-one: var(--STATE-NOT-CONDITIONAL-ducks) var(--STATE-RETRUN--round-one) ;
	
	animation-name: 
		motion-dog--walk, 
		sprite-dog--walk,
		motion-dog--jump,
		sprite-dog--jump
	;
	animation-duration: 
		var(--motion-dog--walk__duration),
		var(--sprite-dog--walk__duration),
		var(--motion-dog--jump__duration),
		var(--sprite-dog--jump__duration)
	;
	animation-timing-function: 
		var(--motion-dog--walk__steps),
		var(--sprite-dog--walk__steps),
		var(--motion-dog--jump__steps),
		var(--sprite-dog--jump__steps)
	;
	animation-delay: 
		var(--timing-game__delay),
		var(--timing-game__delay),
		calc(var(--motion-dog--walk__duration) + var(--timing-game__delay)),
		calc(var(--motion-dog--walk__duration) + var(--timing-game__delay))
	;
	animation-iteration-count: 
		var(--motion-dog--walk__iteration-count), 
		var(--sprite-dog--walk__iteration-count),
		var(--motion-dog--jump__iteration-count),
		var(--sprite-dog--jump__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-RETRUN--round-one),
		var(--STATE-RETRUN--round-one),
		var(--STATE-RETRUN--round-one),
		var(--STATE-RETRUN--round-one)
	;
}
.css-art__duck-hunt input[id="shot01"]:checked ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) 0 ;
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show;
}
.css-art__duck-hunt input[id="shot02"]:checked ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1);
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show-2;
}
.css-art__duck-hunt input[id="shot03"]:checked ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) 0 ;
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show;
}
.css-art__duck-hunt input[id="shot04"]:checked:nth-child(4) ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1);
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show-2;
}
.css-art__duck-hunt input[id="shot05"]:checked:nth-child(5) ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) 0 ;
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show;
}
.css-art__duck-hunt input[id="shot06"]:checked ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1);
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show-2;
}
.css-art__duck-hunt input[id="shot07"]:checked ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) 0 ;
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show;
}
.css-art__duck-hunt input[id="shot08"]:checked ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1);
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show-2;
}
.css-art__duck-hunt input[id="shot09"]:checked ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) 0 ;
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show;
}
.css-art__duck-hunt input[id="shot10"]:checked ~ .statements .dog {
	animation: unset;
	z-index: 1;
	background-position:calc(-0.85 * var(--url-dog-duck__size-width)) calc(var(--sprite-dog__height) * -1);
	animation-duration: var(--motion-dog--show__duration, 2000ms);
	animation-timing-function: linear;
	animation-delay: calc(var(--motion-duck--falls-off__duration) + var(--timing-game__delay));
	animation-iteration-count: 1;
	animation-name: motion-dog--show-2;
}


/*
____ _  _ _  _    ___  _  _ ____ _  _    ____ _  _ ____    ____ _  _    ____ ____ _  _ _  _ ___     ____ _  _ ____ 
|__/ |  | |\ |    |  \ |  | |    |_/     |  | |\ | |___    |  | |\ |    |__/ |  | |  | |\ | |  \    |  | |\ | |___ 
|  \ |__| | \|    |__/ |__| |___ | \_    |__| | \| |___    |__| | \|    |  \ |__| |__| | \| |__/    |__| | \| |___ 
*/

label[for="shot01"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__1: var(--STATE-ARRAY--ducks__1) var(--STATE-ARRAY-NOT--ducks__2);
	--STATE-ARRAY-IF--ducks__1: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__1) running;
	--STATE-ARRAY-ELSE--ducks__1: paused;
	--STATE-ARRAY-RETURN--ducks__1: var(--STATE-ARRAY-IF--ducks__1, var(--STATE-ARRAY-ELSE--ducks__1));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__2__animation--sprite: var(--STATE-ARRAY--ducks__2) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__2__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__2__animation--sprite: var(--STATE-ARRAY-IF--ducks__2__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__2__animation--sprite));

	--STATE-ARRAY-IF--ducks__2__animation--motion: var(--STATE-ARRAY--ducks__2) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__2__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__2__animation--motion: var(--STATE-ARRAY-IF--ducks__2__animation--motion, var(--STATE-ARRAY-ELSE--ducks__2__animation--motion));

	--STATE-ARRAY-IF--ducks__2__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__2) running;
	--STATE-ARRAY-ELSE--ducks__2__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__2__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__2__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__2__animation-play-state--falls-off));

	--LOCAL--path__timing-function: linear;
	--LOCAL--path__name: motion-duck--path-one;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__2__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__2__animation--motion)
	;
	
	animation-delay: 
		calc(var(--motion-dog--walk__duration) + var(--timing-game__delay) + var(--motion-dog--jump__duration)),
		calc(var(--motion-dog--walk__duration) + var(--timing-game__delay) + var(--motion-dog--jump__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__1),
		var(--STATE-ARRAY-RETURN--ducks__1), 
		var(--STATE-ARRAY-RETURN--ducks__2__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__2__animation-play-state--falls-off)
	;
	
}

label[for="shot02"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__2: var(--STATE-ARRAY--ducks__2) var(--STATE-ARRAY-NOT--ducks__3);
	--STATE-ARRAY-IF--ducks__2: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__2) running;
	--STATE-ARRAY-ELSE--ducks__2: paused;
	--STATE-ARRAY-RETURN--ducks__2: var(--STATE-ARRAY-IF--ducks__2, var(--STATE-ARRAY-ELSE--ducks__2));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__3__animation--sprite: var(--STATE-ARRAY--ducks__3) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__3__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__3__animation--sprite: var(--STATE-ARRAY-IF--ducks__3__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__3__animation--sprite));

	--STATE-ARRAY-IF--ducks__3__animation--motion: var(--STATE-ARRAY--ducks__3) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__3__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__3__animation--motion: var(--STATE-ARRAY-IF--ducks__3__animation--motion, var(--STATE-ARRAY-ELSE--ducks__3__animation--motion));

	--STATE-ARRAY-IF--ducks__3__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__3) running;
	--STATE-ARRAY-ELSE--ducks__3__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__3__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__3__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__3__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(0.75,0.25,0.25,.5);
	--LOCAL--path__name: motion-duck--path-two;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__3__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__3__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__2),
		var(--STATE-ARRAY-RETURN--ducks__2), 
		var(--STATE-ARRAY-RETURN--ducks__3__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__3__animation-play-state--falls-off)
	;
	
}

label[for="shot03"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__3: var(--STATE-ARRAY--ducks__3) var(--STATE-ARRAY-NOT--ducks__4);
	--STATE-ARRAY-IF--ducks__3: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__3) running;
	--STATE-ARRAY-ELSE--ducks__3: paused;
	--STATE-ARRAY-RETURN--ducks__3: var(--STATE-ARRAY-IF--ducks__3, var(--STATE-ARRAY-ELSE--ducks__3));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__4__animation--sprite: var(--STATE-ARRAY--ducks__4) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__4__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__4__animation--sprite: var(--STATE-ARRAY-IF--ducks__4__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__4__animation--sprite));

	--STATE-ARRAY-IF--ducks__4__animation--motion: var(--STATE-ARRAY--ducks__4) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__4__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__4__animation--motion: var(--STATE-ARRAY-IF--ducks__4__animation--motion, var(--STATE-ARRAY-ELSE--ducks__4__animation--motion));

	--STATE-ARRAY-IF--ducks__4__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__4) running;
	--STATE-ARRAY-ELSE--ducks__4__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__4__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__4__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__4__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(0.25,0.75,0.25,.5);
	--LOCAL--path__name: motion-duck--path-one;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__4__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__4__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__3),
		var(--STATE-ARRAY-RETURN--ducks__3), 
		var(--STATE-ARRAY-RETURN--ducks__4__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__4__animation-play-state--falls-off)
	;
	
}

label[for="shot04"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__4: var(--STATE-ARRAY--ducks__4) var(--STATE-ARRAY-NOT--ducks__5);
	--STATE-ARRAY-IF--ducks__4: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__4) running;
	--STATE-ARRAY-ELSE--ducks__4: paused;
	--STATE-ARRAY-RETURN--ducks__4: var(--STATE-ARRAY-IF--ducks__4, var(--STATE-ARRAY-ELSE--ducks__4));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__5__animation--sprite: var(--STATE-ARRAY--ducks__5) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__5__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__5__animation--sprite: var(--STATE-ARRAY-IF--ducks__5__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__5__animation--sprite));

	--STATE-ARRAY-IF--ducks__5__animation--motion: var(--STATE-ARRAY--ducks__5) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__5__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__5__animation--motion: var(--STATE-ARRAY-IF--ducks__5__animation--motion, var(--STATE-ARRAY-ELSE--ducks__5__animation--motion));

	--STATE-ARRAY-IF--ducks__5__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__5) running;
	--STATE-ARRAY-ELSE--ducks__5__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__5__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__5__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__5__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(0.24,0.38,0.37,0.89);
	--LOCAL--path__name: motion-duck--path-two;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__5__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__5__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__4),
		var(--STATE-ARRAY-RETURN--ducks__4), 
		var(--STATE-ARRAY-RETURN--ducks__5__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__5__animation-play-state--falls-off)
	;
	
}

label[for="shot05"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__5: var(--STATE-ARRAY--ducks__5) var(--STATE-ARRAY-NOT--ducks__6);
	--STATE-ARRAY-IF--ducks__5: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__5) running;
	--STATE-ARRAY-ELSE--ducks__5: paused;
	--STATE-ARRAY-RETURN--ducks__5: var(--STATE-ARRAY-IF--ducks__5, var(--STATE-ARRAY-ELSE--ducks__5));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__6__animation--sprite: var(--STATE-ARRAY--ducks__6) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__6__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__6__animation--sprite: var(--STATE-ARRAY-IF--ducks__6__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__6__animation--sprite));

	--STATE-ARRAY-IF--ducks__6__animation--motion: var(--STATE-ARRAY--ducks__6) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__6__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__6__animation--motion: var(--STATE-ARRAY-IF--ducks__6__animation--motion, var(--STATE-ARRAY-ELSE--ducks__6__animation--motion));

	--STATE-ARRAY-IF--ducks__6__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__6) running;
	--STATE-ARRAY-ELSE--ducks__6__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__6__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__6__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__6__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(0.5,-0.25,0.75,.5);
	--LOCAL--path__name: motion-duck--path-one;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__6__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__6__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__5),
		var(--STATE-ARRAY-RETURN--ducks__5), 
		var(--STATE-ARRAY-RETURN--ducks__6__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__6__animation-play-state--falls-off)
	;
	
}

label[for="shot06"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__6: var(--STATE-ARRAY--ducks__6) var(--STATE-ARRAY-NOT--ducks__7);
	--STATE-ARRAY-IF--ducks__6: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__6) running;
	--STATE-ARRAY-ELSE--ducks__6: paused;
	--STATE-ARRAY-RETURN--ducks__6: var(--STATE-ARRAY-IF--ducks__6, var(--STATE-ARRAY-ELSE--ducks__6));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__7__animation--sprite: var(--STATE-ARRAY--ducks__7) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__7__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__7__animation--sprite: var(--STATE-ARRAY-IF--ducks__7__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__7__animation--sprite));

	--STATE-ARRAY-IF--ducks__7__animation--motion: var(--STATE-ARRAY--ducks__7) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__7__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__7__animation--motion: var(--STATE-ARRAY-IF--ducks__7__animation--motion, var(--STATE-ARRAY-ELSE--ducks__7__animation--motion));

	--STATE-ARRAY-IF--ducks__7__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__7) running;
	--STATE-ARRAY-ELSE--ducks__7__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__7__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__7__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__7__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(2,0.25,0,.5);
	--LOCAL--path__name: motion-duck--path-two;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__7__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__7__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__6),
		var(--STATE-ARRAY-RETURN--ducks__6), 
		var(--STATE-ARRAY-RETURN--ducks__7__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__7__animation-play-state--falls-off)
	;
	
}

label[for="shot07"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__7: var(--STATE-ARRAY--ducks__7) var(--STATE-ARRAY-NOT--ducks__8);
	--STATE-ARRAY-IF--ducks__7: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__7) running;
	--STATE-ARRAY-ELSE--ducks__7: paused;
	--STATE-ARRAY-RETURN--ducks__7: var(--STATE-ARRAY-IF--ducks__7, var(--STATE-ARRAY-ELSE--ducks__7));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__8__animation--sprite: var(--STATE-ARRAY--ducks__8) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__8__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__8__animation--sprite: var(--STATE-ARRAY-IF--ducks__8__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__8__animation--sprite));

	--STATE-ARRAY-IF--ducks__8__animation--motion: var(--STATE-ARRAY--ducks__8) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__8__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__8__animation--motion: var(--STATE-ARRAY-IF--ducks__8__animation--motion, var(--STATE-ARRAY-ELSE--ducks__8__animation--motion));

	--STATE-ARRAY-IF--ducks__8__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__8) running;
	--STATE-ARRAY-ELSE--ducks__8__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__8__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__8__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__8__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(0.75,-0.25,0.25,-.5);
	--LOCAL--path__name: motion-duck--path-one;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__8__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__8__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__7),
		var(--STATE-ARRAY-RETURN--ducks__7), 
		var(--STATE-ARRAY-RETURN--ducks__8__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__8__animation-play-state--falls-off)
	;
	
}

label[for="shot08"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__8: var(--STATE-ARRAY--ducks__8) var(--STATE-ARRAY-NOT--ducks__9);
	--STATE-ARRAY-IF--ducks__8: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__8) running;
	--STATE-ARRAY-ELSE--ducks__8: paused;
	--STATE-ARRAY-RETURN--ducks__8: var(--STATE-ARRAY-IF--ducks__8, var(--STATE-ARRAY-ELSE--ducks__8));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__9__animation--sprite: var(--STATE-ARRAY--ducks__9) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__9__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__9__animation--sprite: var(--STATE-ARRAY-IF--ducks__9__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__9__animation--sprite));

	--STATE-ARRAY-IF--ducks__9__animation--motion: var(--STATE-ARRAY--ducks__9) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__9__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__9__animation--motion: var(--STATE-ARRAY-IF--ducks__9__animation--motion, var(--STATE-ARRAY-ELSE--ducks__9__animation--motion));

	--STATE-ARRAY-IF--ducks__9__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__9) running;
	--STATE-ARRAY-ELSE--ducks__9__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__9__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__9__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__9__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(0.75,-0.25,0.25,-.5);
	--LOCAL--path__name: motion-duck--path-two;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__9__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__9__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__8),
		var(--STATE-ARRAY-RETURN--ducks__8), 
		var(--STATE-ARRAY-RETURN--ducks__9__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__9__animation-play-state--falls-off)
	;
	
}

label[for="shot09"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__9: var(--STATE-ARRAY--ducks__9) var(--STATE-ARRAY-NOT--ducks__10);
	--STATE-ARRAY-IF--ducks__9: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__9) running;
	--STATE-ARRAY-ELSE--ducks__9: paused;
	--STATE-ARRAY-RETURN--ducks__9: var(--STATE-ARRAY-IF--ducks__9, var(--STATE-ARRAY-ELSE--ducks__9));

	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__10__animation--sprite: var(--STATE-ARRAY--ducks__10) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__10__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__10__animation--sprite: var(--STATE-ARRAY-IF--ducks__10__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__10__animation--sprite));

	--STATE-ARRAY-IF--ducks__10__animation--motion: var(--STATE-ARRAY--ducks__10) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__10__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__10__animation--motion: var(--STATE-ARRAY-IF--ducks__10__animation--motion, var(--STATE-ARRAY-ELSE--ducks__10__animation--motion));

	--STATE-ARRAY-IF--ducks__10__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__10) running;
	--STATE-ARRAY-ELSE--ducks__10__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__10__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__10__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__10__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(0.75,-0.5,0.25,2);
	--LOCAL--path__name: motion-duck--path-one;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__10__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__10__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__9),
		var(--STATE-ARRAY-RETURN--ducks__9), 
		var(--STATE-ARRAY-RETURN--ducks__10__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__10__animation-play-state--falls-off)
	;
	
}

label[for="shot10"] {
	
	--STATE-ARRAY-IF-CONDITIONAL--ducks__10: var(--STATE-ARRAY--ducks__10) var(--STATE-ARRAY-NOT--ducks__11);
	--STATE-ARRAY-IF--ducks__10: var(--STATE-ARRAY-IF-CONDITIONAL--ducks__10) running;
	--STATE-ARRAY-ELSE--ducks__10: paused;
	--STATE-ARRAY-RETURN--ducks__10: var(--STATE-ARRAY-IF--ducks__10, var(--STATE-ARRAY-ELSE--ducks__10));
	
	--STATE-IF--round-tree: var(--STATE-round-three) 0.5;
	--STATE-ELSEIF--round-two: var(--STATE--round-two) 0.75;
	--STATE-ELSEIF--round-one: 1;
	--STATE-RETURN--round:var(--STATE-IF--round-tree, var(--STATE-ELSEIF--round-two, var(--STATE-ELSEIF--round-one)));
	
	--STATE-ARRAY-IF--ducks__11__animation--sprite: var(--STATE-ARRAY--ducks__11) sprite-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__11__animation--sprite:none;
	--STATE-ARRAY-RETURN--ducks__11__animation--sprite: var(--STATE-ARRAY-IF--ducks__11__animation--sprite, var(--STATE-ARRAY-ELSE--ducks__11__animation--sprite));

	--STATE-ARRAY-IF--ducks__11__animation--motion: var(--STATE-ARRAY--ducks__11) motion-duck--falls-off;
	--STATE-ARRAY-ELSE--ducks__11__animation--motion:none;
	--STATE-ARRAY-RETURN--ducks__11__animation--motion: var(--STATE-ARRAY-IF--ducks__11__animation--motion, var(--STATE-ARRAY-ELSE--ducks__11__animation--motion));

	--STATE-ARRAY-IF--ducks__11__animation-play-state--falls-off: var(--STATE-ARRAY--ducks__11) running;
	--STATE-ARRAY-ELSE--ducks__11__animation-play-state--falls-off: paused;
	--STATE-ARRAY-RETURN--ducks__11__animation-play-state--falls-off: var(--STATE-ARRAY-IF--ducks__11__animation-play-state--falls-off, var(--STATE-ARRAY-ELSE--ducks__11__animation-play-state--falls-off));

	--LOCAL--path__timing-function: cubic-bezier(0.75,1.5,1.25,-2);
	--LOCAL--path__name: motion-duck--path-two;
	
	animation-name: 
		sprite-duck--horizontal-fly,
		var(--LOCAL--path__name),
		var(--STATE-ARRAY-RETURN--ducks__11__animation--sprite), 
		var(--STATE-ARRAY-RETURN--ducks__11__animation--motion)
	;
	
	animation-delay: 
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		calc(var(--timing-game__delay) + var(--motion-dog--show__duration) + var(--motion-duck--falls-off__duration)),
		0ms,
		0ms
	;
	
	animation-timing-function: 
		var(--sprite-duck--horizontal-fly__timing-function), 
		var(--LOCAL--path__timing-function),
		var(--sprite-duck--falls-off__timing-function),
		var(--motion-duck--falls-off__timing-function)
	;
	
	animation-duration: 
		var(--sprite-duck--horizontal-fly__duration),
		calc(var(--motion-duck--path__duration) * var(--STATE-RETURN--round)),
		var(--sprite-duck--falls-off__duration),
		var(--motion-duck--falls-off__duration)
	;
	
	animation-fill-mode:
		none,
		none,
		forwards,
		forwards
	;
	
	animation-iteration-count: 
		infinite, 
		infinite,
		var(--sprite-duck--falls-off__iteration-count),
		var(--motion-duck--falls-off__iteration-count)
	;
	
	animation-play-state: 
		var(--STATE-ARRAY-RETURN--ducks__10),
		var(--STATE-ARRAY-RETURN--ducks__10), 
		var(--STATE-ARRAY-RETURN--ducks__11__animation-play-state--falls-off), 
		var(--STATE-ARRAY-RETURN--ducks__11__animation-play-state--falls-off)
	;
	
}


.hit .duck:nth-child(1) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__2) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(2) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__3) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(3) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__4) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(4) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__5) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(5) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__6) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(6) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__7) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(7) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__8) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(8) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__9) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(9) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__10) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}
.hit .duck:nth-child(10) {
	--STATE-IF--duck-red: var(--STATE-ARRAY--ducks__11) red;
	background-color: var(--STATE-IF--duck-red, whitesmoke);
}

.you-win {
	--STATE-IF--you-win: var(--STATE--you-win) flex;
	--STATE-RETRUN--you-win: var(--STATE-IF--you-win, none);
	display: var(--STATE-RETRUN--you-win);
	z-index: 5;
	flex-direction: column;
}

.block-win {
	--STATE-IF--you-win: var(--STATE--you-win) flex;	
	--STATE-RETRUN--you-win: var(--STATE-IF--you-win, none);
	display: var(--STATE-RETRUN--you-win);
}